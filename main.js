// –¶–∏—Ñ—Ä–æ–≤—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–≤–µ–∑–¥–æ—á–∫–∞–º–∏ (7-—Å–µ–≥–º–µ–Ω—Ç–Ω—ã–π –¥–∏—Å–ø–ª–µ–π)
const digitPatterns = {
    '0': [
        ' *** ',
        '*   *',
        '*   *',
        '*   *',
        '*   *',
        '*   *',
        ' *** '
    ],
    '1': [
        '    *',
        '    *',
        '    *',
        '    *',
        '    *',
        '    *',
        '    *'
    ],
    '2': [
        ' *** ',
        '    *',
        '    *',
        ' *** ',
        '*    ',
        '*    ',
        ' *** '
    ],
    '3': [
        ' *** ',
        '    *',
        '    *',
        ' *** ',
        '    *',
        '    *',
        ' *** '
    ],
    '4': [
        '*   *',
        '*   *',
        '*   *',
        ' *** ',
        '    *',
        '    *',
        '    *'
    ],
    '5': [
        ' *** ',
        '*    ',
        '*    ',
        ' *** ',
        '    *',
        '    *',
        ' *** '
    ],
    '6': [
        ' *** ',
        '*    ',
        '*    ',
        ' *** ',
        '*   *',
        '*   *',
        ' *** '
    ],
    '7': [
        ' *** ',
        '    *',
        '    *',
        '    *',
        '    *',
        '    *',
        '    *'
    ],
    '8': [
        ' *** ',
        '*   *',
        '*   *',
        ' *** ',
        '*   *',
        '*   *',
        ' *** '
    ],
    '9': [
        ' *** ',
        '*   *',
        '*   *',
        ' *** ',
        '    *',
        '    *',
        ' *** '
    ],
    ' ': [
        '     ',
        '     ',
        '     ',
        '     ',
        '     ',
        '     ',
        '     '
    ]
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –¥–Ω—è –Ω–µ–¥–µ–ª–∏
function getDayOfWeek(day, month, year) {
    const date = new Date(year, month - 1, day);
    const days = ['–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞'];
    return days[date.getDay()];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∏—Å–æ–∫–æ—Å–Ω–æ–≥–æ –≥–æ–¥–∞
function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞
function calculateAge(day, month, year) {
    const today = new Date();
    const birthDate = new Date(year, month - 1, day);
    let age = today.getFullYear() - birthDate.getFullYear();
    const monthDiff = today.getMonth() - birthDate.getMonth();
    
    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthDate.getDate())) {
        age--;
    }
    
    return age;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞—Ç—ã –∑–≤–µ–∑–¥–æ—á–∫–∞–º–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
function displayDateWithStars(day, month, year) {
    const dateString = `${day.toString().padStart(2, '0')} ${month.toString().padStart(2, '0')} ${year}`;
    console.log('\nüéÇ –î–ê–¢–ê –†–û–ñ–î–ï–ù–ò–Ø –í –§–û–†–ú–ê–¢–ï –≠–õ–ï–ö–¢–†–û–ù–ù–û–ì–û –¢–ê–ë–õ–û üéÇ\n');
    
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞
    const lines = ['', '', '', '', '', '', ''];
    
    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Å–∏–º–≤–æ–ª—É –≤ –¥–∞—Ç–µ
    for (let char of dateString) {
        const pattern = digitPatterns[char];
        if (pattern) {
            // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É –ø–∞—Ç—Ç–µ—Ä–Ω–∞ –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            for (let i = 0; i < 7; i++) {
                lines[i] += pattern[i] + '  '; // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª –º–µ–∂–¥—É —Ü–∏—Ñ—Ä–∞–º–∏
            }
        }
    }
    
    // –í—ã–≤–æ–¥–∏–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏
    lines.forEach(line => console.log(line));
    console.log('\n–§–æ—Ä–º–∞—Ç: –î–î –ú–ú –ì–ì–ì–ì\n');
}

// –§—É–Ω–∫—Ü–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞—Ç—ã
function validateDate(day, month, year) {
    const currentYear = new Date().getFullYear();
    
    if (year < 1900 || year > currentYear) {
        return { valid: false, message: '–ì–æ–¥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1900 –¥–æ —Ç–µ–∫—É—â–µ–≥–æ –≥–æ–¥–∞' };
    }
    
    if (month < 1 || month > 12) {
        return { valid: false, message: '–ú–µ—Å—è—Ü –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 12' };
    }
    
    const daysInMonth = new Date(year, month, 0).getDate();
    if (day < 1 || day > daysInMonth) {
        return { valid: false, message: `–í ${getMonthName(month)} ${year} –≥–æ–¥–∞ ${daysInMonth} –¥–Ω–µ–π` };
    }
    
    const birthDate = new Date(year, month - 1, day);
    const today = new Date();
    if (birthDate > today) {
        return { valid: false, message: '–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º' };
    }
    
    return { valid: true };
}

function getMonthName(month) {
    const months = [
        '', '—è–Ω–≤–∞—Ä–µ', '—Ñ–µ–≤—Ä–∞–ª–µ', '–º–∞—Ä—Ç–µ', '–∞–ø—Ä–µ–ª–µ', '–º–∞–µ', '–∏—é–Ω–µ',
        '–∏—é–ª–µ', '–∞–≤–≥—É—Å—Ç–µ', '—Å–µ–Ω—Ç—è–±—Ä–µ', '–æ–∫—Ç—è–±—Ä–µ', '–Ω–æ—è–±—Ä–µ', '–¥–µ–∫–∞–±—Ä–µ'
    ];
    return months[month];
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
document.getElementById('birthdayForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const day = parseInt(document.getElementById('day').value);
    const month = parseInt(document.getElementById('month').value);
    const year = parseInt(document.getElementById('year').value);
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    const validation = validateDate(day, month, year);
    if (!validation.valid) {
        alert(validation.message);
        return;
    }
    
    // –í—ã—á–∏—Å–ª–µ–Ω–∏—è
    const dayOfWeek = getDayOfWeek(day, month, year);
    const leapYear = isLeapYear(year);
    const age = calculateAge(day, month, year);
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    document.getElementById('dayOfWeek').textContent = `–í—ã —Ä–æ–¥–∏–ª–∏—Å—å –≤ ${dayOfWeek.toLowerCase()}`;
    document.getElementById('leapYear').textContent = leapYear 
        ? `${year} –≥–æ–¥ –±—ã–ª –≤–∏—Å–æ–∫–æ—Å–Ω—ã–º (366 –¥–Ω–µ–π)` 
        : `${year} –≥–æ–¥ –±—ã–ª –æ–±—ã—á–Ω—ã–º (365 –¥–Ω–µ–π)`;
    document.getElementById('age').textContent = `–í–∞–º ${age} ${getAgeWord(age)}`;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    const resultsElement = document.getElementById('results');
    resultsElement.classList.remove('hidden');
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    setTimeout(() => {
        resultsElement.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
    }, 300);
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª–∏
    displayDateWithStars(day, month, year);
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
    console.log(`üìä –ü–û–î–†–û–ë–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:`);
    console.log(`üìÖ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ${dayOfWeek}`);
    console.log(`üóìÔ∏è  –í–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥: ${leapYear ? '–î–∞' : '–ù–µ—Ç'}`);
    console.log(`üéà –í–æ–∑—Ä–∞—Å—Ç: ${age} ${getAgeWord(age)}`);
    console.log(`‚è∞ –î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: ${new Date().toLocaleString('ru-RU')}`);
});

function getAgeWord(age) {
    const lastDigit = age % 10;
    const lastTwoDigits = age % 100;
    
    if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {
        return '–ª–µ—Ç';
    }
    
    if (lastDigit === 1) return '–≥–æ–¥';
    if (lastDigit >= 2 && lastDigit <= 4) return '–≥–æ–¥–∞';
    return '–ª–µ—Ç';
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –ø–µ—á–∞—Ç–∞–Ω–∏—è –∫ –∑–∞–≥–æ–ª–æ–≤–∫—É
    const title = document.querySelector('.title');
    const originalText = title.querySelector('span:last-child') ? title.querySelector('span:last-child').textContent : title.textContent;
    
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª–∏
    console.log(`
üéÇ ================================ üéÇ
   –ê–ù–ê–õ–ò–ó–ê–¢–û–† –î–ê–¢–´ –†–û–ñ–î–ï–ù–ò–Ø
üéÇ ================================ üéÇ

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ,
–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤–∏–¥–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ —Ç–∞–±–ª–æ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å!

–°–æ–∑–¥–∞–Ω–æ —Å ‚ù§Ô∏è –≤ 2025 –≥–æ–¥—É
    `);
});

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–µ–π
document.getElementById('day').addEventListener('input', function() {
    const day = parseInt(this.value);
    if (day < 1 || day > 31) {
        this.style.borderColor = 'rgba(239, 68, 68, 0.6)';
    } else {
        this.style.borderColor = 'rgba(255, 255, 255, 0.3)';
    }
});

document.getElementById('year').addEventListener('input', function() {
    const year = parseInt(this.value);
    const currentYear = new Date().getFullYear();
    if (year < 1900 || year > currentYear) {
        this.style.borderColor = 'rgba(239, 68, 68, 0.6)';
    } else {
        this.style.borderColor = 'rgba(255, 255, 255, 0.3)';
    }
});

// –î–æ–±–∞–≤–ª—è–µ–º –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É (–±–µ–∑ –∑–≤—É–∫–∞, —Ç–æ–ª—å–∫–æ –≤–∏–∑—É–∞–ª—å–Ω–æ)
document.querySelector('.btn-submit').addEventListener('mouseenter', function() {
    this.style.transform = 'translateY(-3px) scale(1.02)';
});

document.querySelector('.btn-submit').addEventListener('mouseleave', function() {
    this.style.transform = 'translateY(0) scale(1)';
});